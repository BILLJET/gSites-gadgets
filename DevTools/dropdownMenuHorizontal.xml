<?xml version="1.0" encoding="UTF-8" ?> 
<Module>
    <ModulePrefs title="Menu" />
    <Content type="html">
     <![CDATA[ 
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <title>Top Menu</title>
<style type="text/css">
.nav {
    list-style: none;
    font-weight: bold;
    margin-bottom: 10px;
    float: left; /* Clear floats */
    width: 100%;
    /* Bring the nav above everything else--uncomment if needed.
    position: relative;
    z-index: 5;
    */
}
.nav > li {
    float: left;
    margin-right: 10px;
    /*position: relative;*/
}
.nav a {
    display: block;
    padding: 5px;
    color: #0082DA;
    /*background-color: #333;*/
    text-decoration: none;
}
.nav a:hover {
    color: #fff;
    background-color: #0082DA;
    text-decoration: underline;
}

/*--- DROPDOWN ---*/
.nav ul {
    background-color: #ff0; /* Adding a background makes the dropdown work properly in IE7+. Make this as close to your page's background as possible (i.e. white page == white background). */
    /*background: rgba(255,255,255,0);*/ /* But! Let's make the background fully transparent where we can, we don't actually want to see it if we can help it... */
    list-style: none;
    position: absolute;
    display: none;
    /*left: -9999px; /* Hide off-screen when not needed (this is more accessible than display: none;) */
    padding-left: 0;
}
.nav ul li {
    padding-top: 1px; /* Introducing a padding between the li and the a give the illusion spaced items */
    float: left;
    /*position: absolute;*/
}
.nav ul a {
    white-space: nowrap; /* Stop text wrapping and creating multi-line dropdown items */
}
.nav li:hover ul { /* Display the dropdown on hover */
    /*left: 0; /* Bring back on-screen when needed */
    display: block;
}
.nav li:hover a { /* These create persistent hover states, meaning the top-most link stays 'hovered' even when your cursor has moved down the list. */
    /*background-color: #6b0c36;*/
    text-decoration: underline;
}
.nav li:hover ul a { /* The persistent hover state does however create a global style for links even before they're hovered. Here we undo these effects. */
    text-decoration: none;
}
.nav li:hover ul li a:hover { /* Here we define the most explicit hover states--what happens when you hover each individual link. */
    background-color: #0082DA;
}
</style>
</head>

<body>
<ul class="nav">
    <li>
        <a href="#">Continuous Integration</a>
        <ul>
            <li><a href="#">Bitbucket</a></li>
            <li><a href="#">Artifactory</a></li>
            <li><a href="#">Bamboo</a></li>
            <li><a href="#">Sonar</a></li>
        </ul>
    </li>
    <li>
        <a href="#">Team Management</a>
        <ul>
            <li><a href="#">Confluence</a></li>
            <li><a href="#">HipChat</a></li>
            <li><a href="#">JIRA</a></li>
        </ul>
    </li>
    <li>
        <a href="#">Continuous Deployment</a>
        <ul>
            <li><a href="#">CDS</a></li>
        </ul>
    </li>
    <li>
        <a href="#">Log Management</a>
        <ul>
            <li><a href="#">ELK</a></li>
        </ul>
    </li>
    <li>
        <a href="#">Monitoring</a>
        <ul>
            <li><a href="#">AMS</a></li>
        </ul>
    </li>
    <li>
        <a href="#">Application Security</a>
        <ul>
            <li><a href="#">Checkmarks</a></li>
        </ul>
    </li>
</ul>
<script>
    var url = (window.location != window.parent.location)
                ? document.referrer
                : document.location.href;
    for (var i = 0; i < document.links.length; i++) {
        if (document.links[i].href == url) {
            document.links[i].className = 'active';
        }
    }
</script>
</body>
</html>
]]>
    </Content> 
</Module>